services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: django_backend
    command:
      - sh
      - -c
      - >
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn config.wsgi:application --bind 0.0.0.0:8000
    ports: ["9092:8000"]
    env_file: [".env"]
    environment:
      - PYTHONPATH=/app
    # volumes: ["./:/app"]  <-- ENLEVER en PROD

  mcp:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: mcp_server
    command: ["python", "mcp_server.py"]
    ports: ["8765:8765"]        # garde un port MCP unique et stable
    env_file: [".env"]
    environment:
      - PYTHONPATH=/app
    depends_on: ["web"]
    
    # volumes: ["./:/app"]  <-- ENLEVER en PROD

  scraper:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: crypto_scraper
    command:
      - python
      - -u
      - -c
      - |
        import time, schedule, subprocess
        def job():
            subprocess.run(['python', 'launch_task_cryptopanic.py'], cwd='/app')
        schedule.every().hour.do(job)
        job()
        while True:
            schedule.run_pending()
            time.sleep(60)
    env_file: [".env"]
    environment:
      - PYTHONPATH=/app
    depends_on: ["web"]
    # volumes: ["./:/app"]  <-- ENLEVER en PROD
